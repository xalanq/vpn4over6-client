/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_xalanq_vpn4over6_Backend */

#ifndef _Included_com_xalanq_vpn4over6_Backend
#define _Included_com_xalanq_vpn4over6_Backend
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_xalanq_vpn4over6_Backend
 * Method:    loggerConnect
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_xalanq_vpn4over6_Backend_loggerConnect
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_xalanq_vpn4over6_Backend
 * Method:    clientConnect
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_com_xalanq_vpn4over6_Backend_clientConnect
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     com_xalanq_vpn4over6_Backend
 * Method:    listeningServer
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_xalanq_vpn4over6_Backend_listeningServer
  (JNIEnv *, jclass);

/*
 * Class:     com_xalanq_vpn4over6_Backend
 * Method:    listeningClient
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_xalanq_vpn4over6_Backend_listeningClient
  (JNIEnv *, jclass);

/*
 * Class:     com_xalanq_vpn4over6_Backend
 * Method:    schedule
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_xalanq_vpn4over6_Backend_schedule
  (JNIEnv *, jclass);

/*
 * Class:     com_xalanq_vpn4over6_Backend
 * Method:    disconnect
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_xalanq_vpn4over6_Backend_disconnect
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
